version: '3.8'

services:
  # Backend API service
  backend:
    build: 
      context: ./backend
      dockerfile: Dockerfile
    command: uvicorn src.main:app --host 0.0.0.0 --port 8000 --reload
    container_name: hr-portal-backend
    volumes:
      - ./backend:/app
    ports:
      - "8000:8000"
    environment:
      - DB_HOST=db
      - DB_PORT=5432
      - DB_NAME=asikh_hr
      - DB_USER=postgres
      - DB_PASSWORD=yourpassword
      - ENVIRONMENT=development
    depends_on:
      - db
    networks:
      - asikh-network
    entrypoint: /app/entrypoint.sh
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/docs"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Frontend React application
  frontend:
    build: 
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "80:80"
    depends_on:
      - backend
    networks:
      - asikh-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "-qO-", "http://localhost:80"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s

  # Database service
  db:
    image: postgres:14-alpine
    container_name: hr-portal-db
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=yourpassword
      - POSTGRES_DB=asikh_hr
    ports:
      - "5432:5432"
    networks:
      - asikh-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

volumes:
  postgres_data:

networks:
  asikh-network:
    driver: bridge
